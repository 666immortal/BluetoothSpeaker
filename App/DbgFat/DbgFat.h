/*********************************************************************************************************
* 模块名称: DbgFat.h
* 摘    要: 
* 当前版本: 1.0.0
* 作    者: 
* 完成日期: 
* 内    容:
* 注    意: none                                                                  
**********************************************************************************************************
* 取代版本: 
* 作    者:
* 完成日期: 
* 修改内容:
* 修改文件: 
*********************************************************************************************************/
#ifndef _DBG_FAT_H_
#define _DBG_FAT_H_

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "DataType.h"
#include "ff.h"

/*********************************************************************************************************
*                                              宏定义
*********************************************************************************************************/

/*********************************************************************************************************
*                                              枚举结构体定义
*********************************************************************************************************/

/*********************************************************************************************************
*                                              API函数声明
*********************************************************************************************************/
void  InitDbgFat(void);                   //初始化文件系统调试程序
                                          
u8 mf_mount(u8* path,u8 mt);              //为磁盘注册工作区	
u8 mf_open(u8*path,u8 mode);              //打开路径下的文件
u8 mf_close(void);                        //关闭文件
u8 mf_read(u16 len);                      //读出数据
u8 mf_write(u8*dat,u16 len);              //写入数据
u8 mf_opendir(u8* path);                  //打开目录
u8 mf_closedir(void);                     //关闭目录 
u8 mf_readdir(void);                      //读取文件夹
u8 mf_scan_files(u8 * path);              //遍历文件
u32 mf_showfree(u8 *drv);                 //显示剩余容量
u8 mf_lseek(u32 offset);                  //文件读写指针偏移
u32 mf_tell(void);                        //读取文件当前读写指针的位置.
u32 mf_size(void);                        //读取文件大小
u8 mf_mkdir(u8*pname);                    //创建目录
u8 mf_fmkfs(u8* path,u8 mode,u16 au);     //格式化
u8 mf_unlink(u8 *pname);                  //删除文件/目录
u8 mf_rename(u8 *oldname,u8* newname);    //修改文件/目录名字(如果目录不同,还可以移动文件)
void mf_getlabel(u8 *path);               //获取盘符（磁盘名字）
void mf_setlabel(u8 *path);               //设置盘符（磁盘名字），最长11个字符，支持数字和大写字母组合以及汉字等
void mf_gets(u16 size);                   //从文件里面读取一段字符串
u8 mf_putc(u8 c);                         //需要_USE_STRFUNC>=1,写一个字符到文件
u8 mf_puts(u8*c);                         //写字符串到文件

#endif
