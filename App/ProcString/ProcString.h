/*********************************************************************************************************
* 模块名称: ProcString.h
* 摘    要: 
* 当前版本: 1.0.0
* 作    者: 
* 完成日期: 2018年03月01日
* 内    容:
* 注    意: none                                                                  
**********************************************************************************************************
* 取代版本: 
* 作    者:
* 完成日期: 
* 修改内容:
* 修改文件: 
*********************************************************************************************************/
#ifndef _PROC_STRING_H_
#define _PROC_STRING_H_ 

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "stm32f10x.h"
#include "DataType.h"

/*********************************************************************************************************
*                                              宏定义
*********************************************************************************************************/

/*********************************************************************************************************
*                                              枚举结构体定义
*********************************************************************************************************/

/*********************************************************************************************************
*                                              API函数声明
*********************************************************************************************************/
void  InitProcString(void);                                       //初始化ProcString模块
u8    StrCmp(u8* pStr1, u8* pStr2);                               //对比两个字符串是否相等，0-相等，1-不相等
void  StrCpy(u8* pStr1, u8* pStr2);                               //把pStr1的内容拷贝到pStr2 
u8    StrLen(u8* pStr);                                           //得到字符串的长度(字节)
u8    Str2Num(u8* pStr, u32* pRslt);                              //将字符串转为数字
u8    GetParaPos(u8 num);                                         //得到某个参数在参数列里面的起始位置
//从串口接收到的字符串中得到指令名,并返回指令长度
u8    GetCmdName(u8* pStr, u8* pCmdName, u8* pCmdNameLen, u8 maxLen); 
//从串口接收到的字符串中得到函数名，参数个数以及是否需要返回值
u8    GetFuncName(u8* pStr, u8* pFuncName, u8* pFuncParaNum, u8* pDispReturnValFlag); 
u8    GetAFuncPara(u8* pStr, u8* pParaStr, u16* pParaType);       //从串口接收到的字符串中得到函数的一个参数
u8    GetAllFuncPara(u8* pStr, u8* pParaNum);                     //得到串口接收到的字符串中所有的函数参数

#endif
