/*********************************************************************************************************
* 模块名称: Malloc.h
* 摘    要: Malloc驱动
* 当前版本: 1.0.0
* 作    者: 
* 完成日期: 2018年03月01日
* 内    容:
* 注    意: none                                                                  
**********************************************************************************************************
* 取代版本:
* 作    者:
* 完成日期:
* 修改内容:       
* 修改文件: 
*********************************************************************************************************/
#ifndef __MALLOC_H_
#define __MALLOC_H_

/*********************************************************************************************************
*                                              包含头文件
*********************************************************************************************************/
#include "stm32f10x.h"

/*********************************************************************************************************
*                                              宏定义
*********************************************************************************************************/ 
//定义两个内存池
#define USER_DEFINE_SRAMIN     0                   //用户定义内部内存池代号
#define USER_DEFINE_SRAMEX     1                   //用户定义外部内存池代号 
               
#define USER_DEFINE_SRAMBANK   2                   //用户定义支持的SRAM块数.  

//mem1内存参数设定.mem1完全处于内部SRAM里面.
#define USER_DEFINE_MEM1_BLOCK_SIZE      32        //用户定义内存块1大小（32字节）
#define USER_DEFINE_MEM1_MAX_SIZE      40*1024     //用户定义最大管理内存（40K）

//mem2内存参数设定.mem2的内存池处于外部SRAM里面
#define USER_DEFINE_MEM2_BLOCK_SIZE      32        //用户定义内存块2大小（32字节）
#define USER_DEFINE_MEM2_MAX_SIZE      960 *1024   //用户定义最大管理内存（960K）
     
#ifndef NULL                                       //没有定义NULL
#define NULL 0                                     //定义NULL为0
#endif

/*********************************************************************************************************
*                                              枚举结构体定义
*********************************************************************************************************/
//内存管理控制器
typedef struct 
{
  void (*init)(u8);                                //初始化
  u8   (*perused)(u8);                             //内存使用率
  u8    *memBase[USER_DEFINE_SRAMBANK];            //内存池 管理SRAMBANK个区域的内存
  u16   *memMap[USER_DEFINE_SRAMBANK];             //内存管理状态表
  u8    memReady[USER_DEFINE_SRAMBANK];            //内存管理是否就绪
}StructMemMallocDev;                               
                                                   
extern StructMemMallocDev StructMallocDev;         //在mallco.c里面定义

/*********************************************************************************************************
*                                              API函数声明
*********************************************************************************************************/
void  InitMemMgt(u8 memx);                         //内存管理初始化函数(外/内部调用)
u8    GetMemPerused(u8 memx);                      //获得内存使用率(外/内部调用) 
void  FreeMemExt(u8 memx, void* ptr);              //内存释放(外部调用)
void* MallocMemExt(u8 memx, u32 size);             //内存分配(外部调用)
void* ReallocMemExt(u8 memx,void* ptr, u32 size);  //重新分配内存(外部调用)

#endif
